.CONST IMG_NW 0x00
.CONST IMG_NE 0x01
.CONST IMG_SW 0x20
.CONST IMG_SE 0x21

.CONST NW 255
.CONST NE 254
.CONST SW 253
.CONST SE 252

# Load entire image
LOAD(RAM[NW],IMG_NW,2) # NW
LOAD(RAM[NE],IMG_NE,2) # NE
LOAD(RAM[SW],IMG_SW,2) # SW
LOAD(RAM[SE],IMG_SE,2) # SE

# NW
SET(NEWS)
BDR(WEST)
BDR(NORTH)
CPY(NEWS,RAM[NE])
BDR(EAST)
CPY(NEWS,RAM[SW])
BDR(SOUTH)

# Read diagonal neighbors
CPY(NEWS,NORTH)
CPY(RAM[0],WEST)
CPY(RAM[1],EAST)
CPY(NEWS,RAM[NW])
CPY(NEWS,SOUTH)
CPY(RAM[2],WEST)
CPY(RAM[3],EAST)
CPY(X NEWS FLAG,RAM[NW]) # White pixels only
CPY(,RAM[0])
OR(,RAM[1])
OR(,RAM[2])
OR(,RAM[3])
OR(,NORTH)
OR(,SOUTH)
OR(,EAST)
OR(RAM[0],WEST) # If any of them were white, stay white
CPY.INV(FLAG,X) # Black pixels only
CPY(,RAM[0])
AND(,RAM[1])
AND(,RAM[2])
AND(,RAM[3])
AND(,NORTH)
AND(,SOUTH)
AND(,EAST)
AND(RAM[0],WEST) # If all of them were white, turn white

SET(FLAG)
CPY(NEWS,RAM[0])

SAVE(IMG_NW,2)

# NE
SET(NEWS)
BDR(EAST)
CPY(NEWS,RAM[NW])
BDR(WEST)
CPY(NEWS,RAM[SE])
BDR(SOUTH)

# Read diagonal neighbors
CPY(NEWS,NORTH)
CPY(RAM[0],WEST)
CPY(RAM[1],EAST)
CPY(NEWS,RAM[NW])
CPY(NEWS,SOUTH)
CPY(RAM[2],WEST)
CPY(RAM[3],EAST)
CPY(X NEWS FLAG,RAM[NW]) # White pixels only
CPY(,RAM[0])
OR(,RAM[1])
OR(,RAM[2])
OR(,RAM[3])
OR(,NORTH)
OR(,SOUTH)
OR(,EAST)
OR(RAM[0],WEST) # If any of them were white, stay white
CPY.INV(FLAG,X) # Black pixels only
CPY(,RAM[0])
AND(,RAM[1])
AND(,RAM[2])
AND(,RAM[3])
AND(,NORTH)
AND(,SOUTH)
AND(,EAST)
AND(RAM[0],WEST) # If all of them were white, turn white

SET(FLAG)
CPY(NEWS,RAM[0])

SAVE(IMG_NE,2)

# SW
SET(NEWS)
BDR(SOUTH)
BDR(WEST)
CPY(NEWS,RAM[NW])
BDR(NORTH)
CPY(NEWS,RAM[SE])
BDR(EAST)

# Read diagonal neighbors
CPY(NEWS,NORTH)
CPY(RAM[0],WEST)
CPY(RAM[1],EAST)
CPY(NEWS,RAM[NW])
CPY(NEWS,SOUTH)
CPY(RAM[2],WEST)
CPY(RAM[3],EAST)
CPY(X NEWS FLAG,RAM[NW]) # White pixels only
CPY(,RAM[0])
OR(,RAM[1])
OR(,RAM[2])
OR(,RAM[3])
OR(,NORTH)
OR(,SOUTH)
OR(,EAST)
OR(RAM[0],WEST) # If any of them were white, stay white
CPY.INV(FLAG,X) # Black pixels only
CPY(,RAM[0])
AND(,RAM[1])
AND(,RAM[2])
AND(,RAM[3])
AND(,NORTH)
AND(,SOUTH)
AND(,EAST)
AND(RAM[0],WEST) # If all of them were white, turn white

SET(FLAG)
CPY(NEWS,RAM[0])

SAVE(IMG_SW,2)

# SE
SET(NEWS)
BDR(EAST)
CPY(NEWS,RAM[NE])
BDR(NORTH)
CPY(NEWS,RAM[SW])
BDR(WEST)

# Read diagonal neighbors
CPY(NEWS,NORTH)
CPY(RAM[0],WEST)
CPY(RAM[1],EAST)
CPY(NEWS,RAM[NW])
CPY(NEWS,SOUTH)
CPY(RAM[2],WEST)
CPY(RAM[3],EAST)
CPY(X NEWS FLAG,RAM[NW]) # White pixels only
CPY(,RAM[0])
OR(,RAM[1])
OR(,RAM[2])
OR(,RAM[3])
OR(,NORTH)
OR(,SOUTH)
OR(,EAST)
OR(RAM[0],WEST) # If any of them were white, stay white
CPY.INV(FLAG,X) # Black pixels only
CPY(,RAM[0])
AND(,RAM[1])
AND(,RAM[2])

AND(,NORTH)
AND(,SOUTH)
AND(,EAST)
AND(RAM[0],WEST) # If all of them were white, turn white

SET(FLAG)
CPY(NEWS,RAM[0])

SAVE(IMG_SE,2)