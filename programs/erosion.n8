LOAD(NEWS,0)
LOAD(NEWS,1)
LOAD(NEWS,2)
LOAD(NEWS,3)
LOAD(NEWS,4)
LOAD(NEWS,5)
LOAD(NEWS,6)
LOAD(RAM[255],7)

LD(NEWS, WEST[0])
LD(NEWS, WEST[1])
LD(NEWS, WEST[2])
LD(NEWS, WEST[3])
LD(NEWS, WEST[4])
LD(NEWS, WEST[5])
LD(NEWS, WEST[6])
LD(RAM[255], WEST[7])


NEWS = LD(IMG[0])
NEWS = LD(IMG[1])
NEWS = LD(IMG[2])
NEWS = LD(IMG[3])
NEWS = LD(IMG[4])
NEWS = LD(IMG[5])
NEWS = LD(IMG[6])
RAM[255],NEWS = LD(IMG[7])

# Read diagonal neighbors
NEWS = LD(NORTH)
RAM[0] = LD(WEST)
RAM[1] = LD(EAST)
NEWS = LD(RAM[255])
NEWS = LD(SOUTH)
RAM[2] = LD(WEST)
RAM[3] = LD(EAST)
X,NEWS,FLAG = LD(RAM[255]) # White pixels only
LD(RAM[0])
OR(RAM[1])
OR(RAM[2])
OR(RAM[3])
OR(NORTH)
OR(SOUTH)
OR(EAST)
RAM[255] = OR(WEST) # If any of them were white, stay white
FLAG = !LD(X) # Black pixels only
LD(RAM[0])
AND(RAM[1])
AND(RAM[2])
AND(RAM[3])
AND(NORTH)
AND(SOUTH)
AND(EAST)
RAM[255] = AND(WEST); # If all of them were white, turn white
FLAG = SET

LD(NEWS[0], WEST)
LD(NEWS[1], WEST)
LD(NEWS[2], WEST)
LD(NEWS[3], WEST)
LD(NEWS[4], WEST)
LD(NEWS[5], WEST)
LD(NEWS[6], WEST)
LD(NEWS[7], WEST)